Grammar

    0 $accept: input $end

    1 input: '\n'
    2      | exp '\n'

    3 exp: NUM
    4    | exp '+' exp
    5    | exp '-' exp
    6    | exp '*' exp
    7    | exp '/' exp
    8    | '-' exp
    9    | '(' exp ')'


Terminals, with rules where they appear

$end (0) 0
'\n' (10) 1 2
'(' (40) 9
')' (41) 9
'*' (42) 6
'+' (43) 4
'-' (45) 5 8
'/' (47) 7
error (256)
NUM (258) 3
NEG (259)


Nonterminals, with rules where they appear

$accept (12)
    on left: 0
input (13)
    on left: 1 2, on right: 0
exp (14)
    on left: 3 4 5 6 7 8 9, on right: 2 4 5 6 7 8 9


State 0

    0 $accept: . input $end

    NUM   shift, and go to state 1
    '-'   shift, and go to state 2
    '\n'  shift, and go to state 3
    '('   shift, and go to state 4

    input  go to state 5
    exp    go to state 6


State 1

    3 exp: NUM .

    $default  reduce using rule 3 (exp)


State 2

    8 exp: '-' . exp

    NUM  shift, and go to state 1
    '-'  shift, and go to state 2
    '('  shift, and go to state 4

    exp  go to state 7


State 3

    1 input: '\n' .

    $default  reduce using rule 1 (input)


State 4

    9 exp: '(' . exp ')'

    NUM  shift, and go to state 1
    '-'  shift, and go to state 2
    '('  shift, and go to state 4

    exp  go to state 8


State 5

    0 $accept: input . $end

    $end  shift, and go to state 9


State 6

    2 input: exp . '\n'
    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp

    '-'   shift, and go to state 10
    '+'   shift, and go to state 11
    '*'   shift, and go to state 12
    '/'   shift, and go to state 13
    '\n'  shift, and go to state 14


State 7

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    8    | '-' exp .

    $default  reduce using rule 8 (exp)


State 8

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    9    | '(' exp . ')'

    '-'  shift, and go to state 10
    '+'  shift, and go to state 11
    '*'  shift, and go to state 12
    '/'  shift, and go to state 13
    ')'  shift, and go to state 15


State 9

    0 $accept: input $end .

    $default  accept


State 10

    5 exp: exp '-' . exp

    NUM  shift, and go to state 1
    '-'  shift, and go to state 2
    '('  shift, and go to state 4

    exp  go to state 16


State 11

    4 exp: exp '+' . exp

    NUM  shift, and go to state 1
    '-'  shift, and go to state 2
    '('  shift, and go to state 4

    exp  go to state 17


State 12

    6 exp: exp '*' . exp

    NUM  shift, and go to state 1
    '-'  shift, and go to state 2
    '('  shift, and go to state 4

    exp  go to state 18


State 13

    7 exp: exp '/' . exp

    NUM  shift, and go to state 1
    '-'  shift, and go to state 2
    '('  shift, and go to state 4

    exp  go to state 19


State 14

    2 input: exp '\n' .

    $default  reduce using rule 2 (input)


State 15

    9 exp: '(' exp ')' .

    $default  reduce using rule 9 (exp)


State 16

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    5    | exp '-' exp .
    6    | exp . '*' exp
    7    | exp . '/' exp

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 5 (exp)


State 17

    4 exp: exp . '+' exp
    4    | exp '+' exp .
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp

    '*'  shift, and go to state 12
    '/'  shift, and go to state 13

    $default  reduce using rule 4 (exp)


State 18

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    6    | exp '*' exp .
    7    | exp . '/' exp

    $default  reduce using rule 6 (exp)


State 19

    4 exp: exp . '+' exp
    5    | exp . '-' exp
    6    | exp . '*' exp
    7    | exp . '/' exp
    7    | exp '/' exp .

    $default  reduce using rule 7 (exp)
